{"version":3,"sources":["components/ui/tabs.js","components/ui/card.js","components/ui/input.js","components/ui/button.js","ProgressTracker.js","App.js","reportWebVitals.js","index.js"],"names":["Tabs","_ref","children","defaultValue","onValueChange","active","setActive","React","useState","createElement","className","Children","map","child","cloneElement","props","value","onClick","handleClick","Tab","_ref2","concat","Card","CardContent","Input","Object","assign","_objectDestructuringEmpty","Button","CATEGORIES","ProgressTracker","data","setData","stored","localStorage","getItem","JSON","parse","currentCategory","setCurrentCategory","task","setTask","score","setScore","useEffect","setItem","stringify","today","Date","toISOString","slice","buildChartData","categoryData","dates","keys","sort","taskNames","Set","forEach","date","t","add","entry","cat","key","placeholder","onChange","e","target","handleAddScore","parseFloat","prev","dateData","_objectSpread","[object Object]","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","flatMap","d","filter","k","Line","type","stroke","dot","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.80158efd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Tabs = ({ children, defaultValue, onValueChange }) => {\n  const [active, setActive] = React.useState(defaultValue);\n\n  const handleClick = (value) => {\n    setActive(value);\n    onValueChange(value);\n  };\n\n  return (\n    <div className=\"flex space-x-2 mb-4\">\n      {React.Children.map(children, (child) =>\n        React.cloneElement(child, {\n          active: child.props.value === active,\n          onClick: () => handleClick(child.props.value),\n        })\n      )}\n    </div>\n  );\n};\n\nexport const Tab = ({ children, active, onClick, className = \"\" }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={`px-4 py-2 rounded ${\n        active\n          ? \"bg-blue-600 text-white\"\n          : \"bg-gray-200 text-gray-800 hover:bg-gray-300\"\n      } ${className}`}\n    >\n      {children}\n    </button>\n  );\n};","import React from 'react';\nexport const Card = ({ children }) => {\n    return (\n      <div className=\"border border-gray-200 rounded shadow-sm bg-white p-4\">\n        {children}\n      </div>\n    );\n  };\n  \n  export const CardContent = ({ children, className = \"\" }) => {\n    return <div className={`space-y-2 ${className}`}>{children}</div>;\n  };","import React from 'react';\nexport const Input = ({ ...props }) => {\n    return (\n      <input\n        className=\"border border-gray-300 rounded px-3 py-2 w-full\"\n        {...props}\n      />\n    );\n  };","import React from 'react';\nexport const Button = (props) => (\n    <button className=\"bg-blue-600 text-white px-4 py-2 rounded\" {...props} />\n  );","import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Tabs, Tab } from \"./components/ui/tabs\";\nimport { Card, CardContent } from \"./components/ui/card\";\nimport { Input } from \"./components/ui/input\";\nimport { Button } from \"./components/ui/button\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\n\nconst CATEGORIES = [\"Health\", \"Relationships\", \"Habits\", \"Work\"];\n\nexport default function ProgressTracker() {\n  const [data, setData] = useState(() => {\n    const stored = localStorage.getItem(\"progressData\");\n    return stored ? JSON.parse(stored) : {};\n  });\n  const [currentCategory, setCurrentCategory] = useState(CATEGORIES[0]);\n  const [task, setTask] = useState(\"\");\n  const [score, setScore] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"progressData\", JSON.stringify(data));\n  }, [data]);\n\n  const today = new Date().toISOString().slice(0, 10);\n\n  const handleAddScore = () => {\n    if (!task || !score) return;\n    const entry = parseFloat(score);\n    setData(prev => {\n      const categoryData = prev[currentCategory] || {};\n      const dateData = categoryData[today] || {};\n      dateData[task] = (dateData[task] || 0) + entry;\n      return {\n        ...prev,\n        [currentCategory]: {\n          ...categoryData,\n          [today]: dateData,\n        },\n      };\n    });\n    setTask(\"\");\n    setScore(\"\");\n  };\n\n  const buildChartData = () => {\n    const categoryData = data[currentCategory] || {};\n    const dates = Object.keys(categoryData).sort();\n    const taskNames = new Set();\n    dates.forEach(date => Object.keys(categoryData[date]).forEach(t => taskNames.add(t)));\n    return dates.map(date => {\n      const entry = { date };\n      for (let task of taskNames) {\n        entry[task] = categoryData[date][task] || 0;\n      }\n      return entry;\n    });\n  };\n\n  return (\n    <div className=\"p-4 space-y-4\">\n      <h1 className=\"text-2xl font-bold\">Progress Tracker</h1>\n      <Tabs defaultValue={CATEGORIES[0]} onValueChange={setCurrentCategory}>\n        {CATEGORIES.map(cat => (\n          <Tab key={cat} value={cat} className=\"capitalize\">\n            {cat}\n          </Tab>\n        ))}\n      </Tabs>\n      <Card>\n        <CardContent className=\"flex flex-col gap-2 p-4\">\n          <Input\n            placeholder=\"Task/Goal name\"\n            value={task}\n            onChange={e => setTask(e.target.value)}\n          />\n          <Input\n            placeholder=\"Score (e.g., -1, 0.25)\"\n            value={score}\n            onChange={e => setScore(e.target.value)}\n          />\n          <Button onClick={handleAddScore}>Add Score</Button>\n        </CardContent>\n      </Card>\n      <LineChart\n        width={800}\n        height={400}\n        data={buildChartData()}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis domain={[-100, 100]} />\n        <Tooltip />\n        <Legend />\n        {[...new Set(buildChartData().flatMap(d => Object.keys(d).filter(k => k !== \"date\")))].map(key => (\n          <Line type=\"monotone\" dataKey={key} key={key} stroke=\"#8884d8\" dot={false} />\n        ))}\n      </LineChart>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ProgressTracker from \"./ProgressTracker\";\n\nfunction App() {\n  return <ProgressTracker />;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}